version: "3.8"

networks:
    nginx_reverse_proxy_gateway:
        external: true
        name: nginx_reverse_proxy_gateway

services:
    automationid-db:
        container_name: ${AUTOMATIONID_DB}
        image: mysql:local
        build:
            context: ./automationid-api/src/database
            dockerfile: Dockerfile
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        ports:
            - "${MY_SQL_PORT}:${MY_SQL_DEFAULT_PORT}"
        networks:
            - ${HOST_NETWORK}
        environment:
            MYSQL_DATABASE: ${MY_SQL_DATABASE}
            MYSQL_ALLOW_EMPTY_PASSWORD: ${MY_SQL_ALLOW_EMPTY_PASSWORD}
            MYSQL_ROOT_PASSWORD: ${MY_SQL_ROOT_PASSWORD}
            MYSQL_USER: ${MY_SQL_USER}
            MYSQL_PASSWORD: ${MY_SQL_PASSWORD}
            MYSQL_ROOT_HOST: ${MY_SQL_ROOT_HOST}
        volumes:
            - mysql-data:/data/db
            - "./automationid-api/src/database/procedure.sql:/docker-entrypoint-initdb.d/procedure.sql"
    automationid-api:
        container_name: ${AUTOMATIONID_API}
        depends_on:
            - ${AUTOMATIONID_DB}
        image: ${AUTOMATIONID_API}
        build:
            context: ./automationid-api
            dockerfile: Dockerfile
        restart: always
        command: bash -c 'while !</dev/tcp/automationid-db/${MY_SQL_DEFAULT_PORT}; do sleep 1; done; npm start'
        networks:
            - ${HOST_NETWORK}
        ports:
            - "${AUTOMATIONID_API_PORT}:${AUTOMATIONID_API_PORT}"
        environment:
            - SERVER_PORT: "${SERVER_PORT}"
            - DATABASE_NAME: ${DATABASE_NAME}
            - DATABASE_PORT: ${DATABASE_PORT}
            - DATABASE_USER: ${DATABASE_USER}
            - DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            - AUTOMATIONID_DB: ${AUTOMATIONID_DB}
            - AUTOMATIONID_API: ${AUTOMATIONID_API}
            - AUTOMATIONID_API_PORT: ${AUTOMATIONID_API_PORT}
volumes:
    mysql-data:
        driver: local
